{"version":3,"sources":["store.ts","utils/utils.ts","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["getLoading","state","isLoading","getError","isError","getTodos","todos","store","createStore","action","undefined","type","newTodos","filter","item","id","value","sort","item1","item2","title","localeCompare","Number","completed","a","user","name","b","URL","loadTodos","fetch","then","response","json","loadUsers","Todo","props","todo","onDelete","className","onClick","getMethods","handlerSort","handlerDelete","TodoList","connect","map","key","getMethod","setLoad","setError","setNewTodos","isLoad","length","Promise","all","todosFromApi","usersFromApi","preparedTodos","find","person","userId","catch","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27d5f728.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { TodoWithUser } from './utils/types';\n\nexport const TYPE_SET_ERROR = 'error';\nexport const TYPE_SET_LOAD = 'loading';\nexport const TYPE_SET_SORT = 'sort';\nexport const TYPE_SET_NEW_TODOS = 'downloaded';\nexport const TYPE_DELETE_TODO = 'delete_item';\n\n\nexport interface Storage {\n  isLoading: boolean;\n  isError: string;\n  todos: TodoWithUser[];\n}\n\n\nconst initStore: Storage = {\n  isLoading: false,\n  isError: '',\n  todos: [],\n};\n\nexport const getLoading = (state: Storage) => state.isLoading;\nexport const getError = (state: Storage) => state.isError;\nexport const getTodos = (state: Storage) => state.todos;\n\nexport const setLoad = (value: boolean) => ({ type: TYPE_SET_LOAD, value });\nexport const setError = (value: string) => ({ type: TYPE_SET_ERROR, value });\nexport const setSort = (value: string) => ({ type: TYPE_SET_SORT, value });\nexport const setNewTodos = (value: TodoWithUser[]) => ({ type: TYPE_SET_NEW_TODOS, value });\nexport const deleteTodo = (value: number) => ({ type: TYPE_DELETE_TODO, value });\n\n\nconst reducer = (state: Storage | undefined, action: AnyAction): Storage => {\n  if (state === undefined) {\n    return { isLoading: false, isError: '', todos: [] };\n  }\n\n  switch (action.type) {\n    case 'delete_item': {\n      const newTodos = state.todos.filter(item => item.id !== action.value);\n\n      return { ...state, todos: newTodos };\n    }\n\n    case 'loading': {\n      return { ...state, isLoading: action.value };\n    }\n\n    case 'error': {\n      return { ...state, isError: action.value };\n    }\n\n    case 'downloaded': {\n      return { ...state, todos: action.value };\n    }\n\n    case 'sort': {\n      const newTodos = [...state.todos];\n\n      switch (action.value) {\n        case 'title': {\n          newTodos.sort((item1, item2) => item1.title.localeCompare(item2.title));\n\n          return { ...state, todos: newTodos };\n        }\n\n        case 'ID': {\n          newTodos.sort((item1, item2) => item1.id - item2.id);\n\n          return { ...state, todos: newTodos };\n        }\n\n        case 'condition': {\n          newTodos.sort((item1, item2) => (\n            Number(item1.completed) - Number(item2.completed)\n          ));\n\n          return { ...state, todos: newTodos };\n        }\n\n        case 'name': {\n          newTodos.sort((item1, item2) => {\n            const a = item1.user ? item1.user.name : '';\n            const b = item2.user ? item2.user.name : '';\n\n            return a.localeCompare(b);\n          });\n\n          return { ...state, todos: newTodos };\n        }\n\n        default: {\n          return state;\n        }\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const store = createStore(reducer, initStore);\n","import { Todo, User } from './types';\n\nconst URL = 'https://jsonplaceholder.typicode.com/';\n\nexport async function loadData<T>(url: string): Promise<T> {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport async function loadTodos(): Promise<Todo[]> {\n  return fetch(`${URL}todos`)\n    .then(response => response.json());\n}\n\nexport async function loadUsers(): Promise<User[]> {\n  return fetch(`${URL}users`)\n    .then(response => response.json());\n}\n","import React, { FC } from 'react';\nimport { TodoWithUser } from '../utils/types';\n\ninterface Props {\n  todo: TodoWithUser;\n  onDelete: (value: number) => void;\n}\n\nexport const Todo: FC<Props> = (props) => {\n  const {\n    todo: {\n      id, title, user, completed,\n    }, onDelete,\n  } = props;\n\n  const handler = () => {\n    onDelete(id);\n  };\n\n  return (\n    <tr>\n      <td className=\"cell\">{id}</td>\n      <td className=\"cell\">{title}</td>\n      <td className=\"cell\">{user ? user.name : ' - '}</td>\n      <td className=\"cell\">{completed ? 'pending' : 'completed'}</td>\n      <td className=\"cell\">\n        <button\n          type=\"button\"\n          onClick={handler}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Todo } from './Todo';\nimport { TodoWithUser } from '../utils/types';\nimport {\n  getTodos, Storage, setSort, deleteTodo,\n} from '../store';\n\ninterface Props {\n  todos: TodoWithUser[];\n  handlerSort: (value: string) => void;\n  handlerDelete: (value: number) => void;\n}\n\nconst TodoListInner: FC<Props> = (props) => {\n  const {\n    todos,\n    handlerSort,\n    handlerDelete,\n  } = props;\n\n  return (\n    <table className=\"todo__table\">\n      <thead>\n        <tr>\n          <th className=\"table__title\">\n            <button\n              type=\"button\"\n              onClick={() => handlerSort('ID')}\n              className=\"table__button\"\n            >\n              number task\n            </button>\n          </th>\n          <th className=\"table__title\">\n            <button\n              type=\"button\"\n              onClick={() => handlerSort('title')}\n              className=\"table__button\"\n            >\n              Title\n            </button>\n          </th>\n          <th className=\"table__title\">\n            <button\n              type=\"button\"\n              onClick={() => handlerSort('name')}\n              className=\"table__button\"\n            >\n              Name\n            </button>\n          </th>\n          <th className=\"table__title\">\n            <button\n              type=\"button\"\n              onClick={() => handlerSort('condition')}\n              className=\"table__button\"\n            >\n              Condition\n            </button>\n          </th>\n          <th className=\"table__title\">-</th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => <Todo key={todo.id} todo={todo} onDelete={handlerDelete} />)}\n      </tbody>\n    </table>\n  );\n};\n\nconst getMethods = { handlerSort: setSort, handlerDelete: deleteTodo };\nconst getData = (state: Storage) => ({\n  todos: getTodos(state),\n});\n\nexport const TodoList = connect(getData, getMethods)(TodoListInner);\n","import React, { FC } from 'react';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport {\n  setLoad, setError, getLoading, getError, Storage, setNewTodos, getTodos,\n} from './store';\n\nimport { loadTodos, loadUsers } from './utils/utils';\nimport { TodoWithUser } from './utils/types';\nimport { TodoList } from './components/TodoList';\n\ninterface Props {\n  isLoad: boolean;\n  isError: string;\n  todos: TodoWithUser[];\n  setLoad: (value: boolean) => void;\n  setError: (value: string) => void;\n  setNewTodos: (value: TodoWithUser[]) => void;\n}\n\nconst App: FC<Props> = (props) => {\n  const clickHandler = () => {\n    props.setLoad(true);\n    Promise.all([\n      loadTodos(),\n      loadUsers(),\n    ])\n      .then(([todosFromApi, usersFromApi]) => {\n        const preparedTodos = todosFromApi.map(todo => {\n          const user = usersFromApi.find(person => todo.userId === person.id);\n\n          return { ...todo, user };\n        });\n\n        props.setNewTodos(preparedTodos);\n        props.setLoad(false);\n      })\n      .catch(() => {\n        props.setError('Download error, try again.');\n        props.setLoad(false);\n      });\n  };\n\n  if (!props.todos.length) {\n    return (\n      <>\n        <h1>Redux list of todo</h1>\n        <button\n          type=\"button\"\n          onClick={clickHandler}\n          disabled={props.isLoad}\n        >\n          load data\n        </button>\n        <p>{props.isLoad ? 'Loading...' : ''}</p>\n        <p>{props.isError || ''}</p>\n      </>\n    );\n  }\n\n  return (\n    <TodoList />\n  );\n};\n\nconst getMethod = { setLoad, setError, setNewTodos };\nconst getData = (state: Storage) => ({\n  isLoad: getLoading(state),\n  isError: getError(state),\n  todos: getTodos(state),\n});\n\n\nexport default connect(getData, getMethod)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}